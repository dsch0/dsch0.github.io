<html>

<head>
    <title> Andrew Schmidt November 29</title>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Bootstrap icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />

    <!-- charts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Data table -->
    <link href="https://unpkg.com/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
    <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>

    <!-- Animation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>

    <!-- Map -->
    <link href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" rel="stylesheet" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <!-- sweetalert2 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.8.0/sweetalert2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.8.0/sweetalert2.all.min.js"></script>

    <!-- moment js for date -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>


    <link href="https://juxinglong.github.io/static/MIS3033.css" rel="stylesheet" />
    <script>
        "use strict";
        var rootPath = '@Url.Content("~/")';
    </script>

</head>
<body style="margin:20px;">
    <div>
        <img src="~/img/logo.svg" style="height:60px;" />
    </div>

    <div>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link" href="~/stu/index" target="_self">Student</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" href="~/stu/profile" target="_self">Profile</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="~/stu/course" target="_self">Course</a>
            </li>

            <li class="nav-item">
                <a class="nav-link " href="~/stu/enrollment" target="_self">Enrollment</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="~/stu/chart" target="_self">Chart</a> @* //chart to summary *@
            </li>
        </ul>

    </div>

    <div class="alert alert-secondary fw-bold text-uppercase" style="width:400px;display:flex;flex-direction:row;justify-content:center; align-items:center;">
        Chart Management
    </div>

    <div style="width:400px;">
        <div class="input-group">
            <label class="input-group-text"> Course</label>

            <select id="sc" class="form-select">
                   <option value="mis3013"> MIS3013 Intro to Programming</option>
                   <option value="mis3033"> MIS3033 C# Web App</option>
            </select>
        </div>
    </div>

    <div id="table">
     
    </div>

    <div style="width:500px;">
        <canvas id="c1"> </canvas>
        </div>

    <script>
        var sc = document.querySelector("#sc");
        var grid = null;
        var c1 = null;
        sc.addEventListener("change", async () => {
            //alert(sc.value);
            let fd = new FormData();
            fd.append("id",sc.value);
            let r = await fetch(rootPath + "stu/getlg", {method:"post",cache:"no-store",body:fd})
            let rj = await r.json();
            // show table
            if(grid!=null)
            {
                grid.destroy();
            }
            let table = document.querySelector("#table");
            table.innerHTML = ""; //clean the table

            let params;
            params = {
                data: rj,
                width: 500,
                columns: [{ id: "lg", name: "Letter Grade" }, { id: "n", name: "Number of Students"}],


            };
            grid = new gridjs.Grid(params);
            grid.render(table);
            // show chart
            if (c1 !=null)
            {
                c1.destroy();
            }
            let canvas1 = document.querySelector("#c1");
            canvas1.innerHTML = "";
            params = {
                type: "pie",
                data: {
                    labels: rj.map(x => x.lg),
                    datasets: [
                        {
                            label: `Number`,
                            data: rj.map(x => x.n),
                        },
                    ],
                }
            };
           c1= new Chart(canvas1, params);

            //end

        });
    </script>

    <script>
        async function loadsc() //do not want to manually add
        {
            let r = await fetch(rootPath + "stu/getsc");
            let rj=await r.json();
            sc.innerHTML = "";

            for (let i = 0; i < rj.length; i++)
            {
                let opt = document.createElement("option");
                opt.value = rj[i].id;
                opt.text = rj[i].text;

                sc.options.add(opt);
            }
            sc.selectedIndex = -1;
           

        }

        loadsc();

    </script>



</body>

</html>