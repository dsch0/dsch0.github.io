<html>

    <head>
        <title> Andrew Schmidt MIS3033</title>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Bootstrap icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />

    <!-- charts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Data table -->
    <link href="https://unpkg.com/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
    <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>

    <!-- Animation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>

    <!-- Map -->
    <link href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" rel="stylesheet" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <!-- sweetalert2 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.8.0/sweetalert2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.8.0/sweetalert2.all.min.js"></script>


    <link href="https://juxinglong.github.io/static/MIS3033.css" rel="stylesheet" />
</head>
    <body style="margin:20px;">
    <script>
        "use strict";
        var rootPath = '@Url.Content("~/")';//get the root path of the web app


        {
            let stu; //null, let defines a local variable, like char, boolean
            stu = {
            id:"s123",
            name:"Andrew Schmidt",
            grade:96.6, // the last comma is optional, good practice incase we need to add another line
            };
            // if we try to use stu outside of the {}, it will not work since it is a local variable
        }


    </script>

    <div class="m-bd-callout m-bd-callout-primary" style="width:400px">
        
        <div class="input-group">
            <label class="input-group-text" for="id"> Student ID</label>
                    <input class="form-control" type="text" id="id"/>
        </div>

        <div class="input-group" style="margin-top:3px;">
            <label class="input-group-text" for="name"> Name</label>
            <input class="form-control" type="text" id="name" />

        </div>

        <div class="input-group" style="margin-top:3px;">
            <label class="input-group-text" for="dob"> DOB</label>
            <input class="form-control" type="date" id="dob" />

        </div>

       <button id="addbtn" class="btn btn-primary">Add</button>
    </div>
        <script>
        {
             let addbtn = document.querySelector("#addbtn");
             addbtn.addEventListener("click", async ()=> {
                 addstu();
             } );

             async function addstu ()
             {// function body
                 //fetch function here, must be async define

                 let fd = new FormData();
                // fd.append("id","S0000");
                 fd.append("id",document.querySelector("#id").value);
                fd.append("dob", document.querySelector("#dob").value);
                fd.append("name", document.querySelector("#name").value);
                 
               let r= await fetch(rootPath+"Home/AddStu", {body:fd, method:"post",cache:"no-store"});

               if (r.ok==true)
               {
                   //success
                    console.log(r);
                    let rj = await r.json();

                    console.log(rj);
                    ShowTable();

                    Swal.fire({
                        title: "Success",
                        text: rj.message,
                        icon: "success", // , optional

                    });
               }
               else
               {
                    Swal.fire({
                        title: "Failed!",
                        text: "Add Student Failed!",
                        icon: "error", // , optional

                    });
               }
                    
             }
        }
        </script>
    If no name in the title 10% will deducted

    <div id="table">

        </div>

        <script>
            "use strict";
            var grid = null;//table variable
            var g;

            async function ShowTable() {
                //fetch the data and show in the table
                if (grid != null) {
                    grid.destroy();
                }
                let table = document.querySelector("#table"); // this is  where to add

                // add something here
                table.innerHTML = ""; //clean everything inside the table div
                let r = await fetch(rootPath + "home/getstus", {cache:"no-store"} );
                let rj = await r.json();

                g = rj;

                let params = {
                    data:rj,
                    pagination:{limit:5,},
                    search:true,
                    sort:true,
                    width:600,
                    columns: [{ id: "id", name: "Student ID" }, { id: "name", name: "Name" }, {id:"dob",name:"DOB"}]
                };
                grid = new gridjs.Grid(params); 
                grid.render(table);
            } //end of function showtable
            ShowTable();
        </script>
    </body>

</html>